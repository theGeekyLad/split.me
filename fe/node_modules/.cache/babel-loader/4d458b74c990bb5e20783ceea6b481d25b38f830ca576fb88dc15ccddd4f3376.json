{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst progressSlice = createSlice({\n  name: 'progress',\n  initialState: {\n    visible: false\n  },\n  reducers: {\n    showProgress: state => {\n      state.visible = true;\n    },\n    hideProgress: state => {\n      state.visible = false;\n    },\n    setProgress: (state, action) => {\n      state.visible = !!action.payload;\n    }\n  }\n});\nexport const {\n  showProgress,\n  hideProgress,\n  setProgress\n} = progressSlice.actions;\nconst store = configureStore({\n  reducer: {\n    progress: progressSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","progressSlice","name","initialState","visible","reducers","showProgress","state","hideProgress","setProgress","action","payload","actions","store","reducer","progress"],"sources":["/home/thegeekylad/Projects/Projects/split.me/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst progressSlice = createSlice({\n  name: 'progress',\n  initialState: { visible: false },\n  reducers: {\n    showProgress: (state) => { state.visible = true; },\n    hideProgress: (state) => { state.visible = false; },\n    setProgress: (state, action) => { state.visible = !!action.payload; },\n  },\n});\n\nexport const { showProgress, hideProgress, setProgress } = progressSlice.actions;\n\nconst store = configureStore({\n  reducer: {\n    progress: progressSlice.reducer,\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IAAEC,OAAO,EAAE;EAAM,CAAC;EAChCC,QAAQ,EAAE;IACRC,YAAY,EAAGC,KAAK,IAAK;MAAEA,KAAK,CAACH,OAAO,GAAG,IAAI;IAAE,CAAC;IAClDI,YAAY,EAAGD,KAAK,IAAK;MAAEA,KAAK,CAACH,OAAO,GAAG,KAAK;IAAE,CAAC;IACnDK,WAAW,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAAEH,KAAK,CAACH,OAAO,GAAG,CAAC,CAACM,MAAM,CAACC,OAAO;IAAE;EACtE;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,YAAY;EAAEE,YAAY;EAAEC;AAAY,CAAC,GAAGR,aAAa,CAACW,OAAO;AAEhF,MAAMC,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAE;IACPC,QAAQ,EAAEd,aAAa,CAACa;EAC1B;AACF,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}