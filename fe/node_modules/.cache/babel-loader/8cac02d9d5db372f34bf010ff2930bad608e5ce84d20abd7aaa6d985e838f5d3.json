{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = createThemeWithVars;\nvar _formatMuiErrorMessage = _interopRequireDefault(require(\"@mui/utils/formatMuiErrorMessage\"));\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _system = require(\"@mui/system\");\nvar _spacing = require(\"@mui/system/spacing\");\nvar _cssVars = require(\"@mui/system/cssVars\");\nvar _styleFunctionSx = _interopRequireWildcard(require(\"@mui/system/styleFunctionSx\"));\nvar _colorManipulator = require(\"@mui/system/colorManipulator\");\nvar _createThemeNoVars = _interopRequireDefault(require(\"./createThemeNoVars\"));\nvar _createColorScheme = _interopRequireWildcard(require(\"./createColorScheme\"));\nvar _shouldSkipGeneratingVar = _interopRequireDefault(require(\"./shouldSkipGeneratingVar\"));\nvar _createGetSelector = _interopRequireDefault(require(\"./createGetSelector\"));\nvar _stringifyTheme = require(\"./stringifyTheme\");\nvar _createPalette = require(\"./createPalette\");\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction toRgb(color) {\n  if (typeof color !== 'string' || !color.startsWith('hsl')) {\n    return color;\n  }\n  return (0, _colorManipulator.hslToRgb)(color);\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = (0, _colorManipulator.private_safeColorChannel)(toRgb(obj[key]), `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, for example \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nfunction getSpacingVal(spacingInput) {\n  if (typeof spacingInput === 'number') {\n    return `${spacingInput}px`;\n  }\n  if (typeof spacingInput === 'string' || typeof spacingInput === 'function' || Array.isArray(spacingInput)) {\n    return spacingInput;\n  }\n  return '8px';\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nconst createGetCssVar = (cssVarPrefix = 'mui') => (0, _system.unstable_createGetCssVar)(cssVarPrefix);\nexports.createGetCssVar = createGetCssVar;\nfunction attachColorScheme(colorSpace, colorSchemes, scheme, restTheme, colorScheme) {\n  if (!scheme) {\n    return undefined;\n  }\n  scheme = scheme === true ? {} : scheme;\n  const mode = colorScheme === 'dark' ? 'dark' : 'light';\n  if (!restTheme) {\n    colorSchemes[colorScheme] = (0, _createColorScheme.default)({\n      ...scheme,\n      palette: {\n        mode,\n        ...scheme?.palette\n      },\n      colorSpace\n    });\n    return undefined;\n  }\n  const {\n    palette,\n    ...muiTheme\n  } = (0, _createThemeNoVars.default)({\n    ...restTheme,\n    palette: {\n      mode,\n      ...scheme?.palette\n    },\n    colorSpace\n  });\n  colorSchemes[colorScheme] = {\n    ...scheme,\n    palette,\n    opacity: {\n      ...(0, _createColorScheme.getOpacity)(mode),\n      ...scheme?.opacity\n    },\n    overlays: scheme?.overlays || (0, _createColorScheme.getOverlays)(mode)\n  };\n  return muiTheme;\n}\n\n/**\n * A default `createThemeWithVars` comes with a single color scheme, either `light` or `dark` based on the `defaultColorScheme`.\n * This is better suited for apps that only need a single color scheme.\n *\n * To enable built-in `light` and `dark` color schemes, either:\n * 1. provide a `colorSchemeSelector` to define how the color schemes will change.\n * 2. provide `colorSchemes.dark` will set `colorSchemeSelector: 'media'` by default.\n */\nfunction createThemeWithVars(options = {}, ...args) {\n  const {\n    colorSchemes: colorSchemesInput = {\n      light: true\n    },\n    defaultColorScheme: defaultColorSchemeInput,\n    disableCssColorScheme = false,\n    cssVarPrefix = 'mui',\n    nativeColor = false,\n    shouldSkipGeneratingVar = _shouldSkipGeneratingVar.default,\n    colorSchemeSelector: selector = colorSchemesInput.light && colorSchemesInput.dark ? 'media' : undefined,\n    rootSelector = ':root',\n    ...input\n  } = options;\n  const firstColorScheme = Object.keys(colorSchemesInput)[0];\n  const defaultColorScheme = defaultColorSchemeInput || (colorSchemesInput.light && firstColorScheme !== 'light' ? 'light' : firstColorScheme);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const {\n    [defaultColorScheme]: defaultSchemeInput,\n    light: builtInLight,\n    dark: builtInDark,\n    ...customColorSchemes\n  } = colorSchemesInput;\n  const colorSchemes = {\n    ...customColorSchemes\n  };\n  let defaultScheme = defaultSchemeInput;\n\n  // For built-in light and dark color schemes, ensure that the value is valid if they are the default color scheme.\n  if (defaultColorScheme === 'dark' && !('dark' in colorSchemesInput) || defaultColorScheme === 'light' && !('light' in colorSchemesInput)) {\n    defaultScheme = true;\n  }\n  if (!defaultScheme) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`colorSchemes.${defaultColorScheme}\\` option is either missing or invalid.` : (0, _formatMuiErrorMessage.default)(21, defaultColorScheme));\n  }\n\n  // The reason to use `oklch` is that it is the most perceptually uniform color space and widely supported.\n  let colorSpace;\n  if (nativeColor) {\n    colorSpace = 'oklch';\n  }\n\n  // Create the palette for the default color scheme, either `light`, `dark`, or custom color scheme.\n  const muiTheme = attachColorScheme(colorSpace, colorSchemes, defaultScheme, input, defaultColorScheme);\n  if (builtInLight && !colorSchemes.light) {\n    attachColorScheme(colorSpace, colorSchemes, builtInLight, undefined, 'light');\n  }\n  if (builtInDark && !colorSchemes.dark) {\n    attachColorScheme(colorSpace, colorSchemes, builtInDark, undefined, 'dark');\n  }\n  let theme = {\n    defaultColorScheme,\n    ...muiTheme,\n    cssVarPrefix,\n    colorSchemeSelector: selector,\n    rootSelector,\n    getCssVar,\n    colorSchemes,\n    font: {\n      ...(0, _cssVars.prepareTypographyVars)(muiTheme.typography),\n      ...muiTheme.font\n    },\n    spacing: getSpacingVal(input.spacing)\n  };\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n    const setCssVarColor = cssVar => {\n      const tokens = cssVar.split('-');\n      const color = tokens[1];\n      const colorToken = tokens[2];\n      return getCssVar(cssVar, palette[color][colorToken]);\n    };\n\n    // attach black & white channels to common node\n    if (palette.mode === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    }\n    if (palette.mode === 'dark') {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n    function colorMix(method, color, coefficient) {\n      if (colorSpace) {\n        let mixer;\n        if (method === _colorManipulator.private_safeAlpha) {\n          mixer = `transparent ${((1 - coefficient) * 100).toFixed(0)}%`;\n        }\n        if (method === _colorManipulator.private_safeDarken) {\n          mixer = `#000 ${(coefficient * 100).toFixed(0)}%`;\n        }\n        if (method === _colorManipulator.private_safeLighten) {\n          mixer = `#fff ${(coefficient * 100).toFixed(0)}%`;\n        }\n        return `color-mix(in ${colorSpace}, ${color}, ${mixer})`;\n      }\n      return method(color, coefficient);\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Button', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (palette.mode === 'light') {\n      setColor(palette.Alert, 'errorColor', colorMix(_colorManipulator.private_safeDarken, palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', colorMix(_colorManipulator.private_safeDarken, palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', colorMix(_colorManipulator.private_safeDarken, palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', colorMix(_colorManipulator.private_safeDarken, palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', colorMix(_colorManipulator.private_safeLighten, palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', colorMix(_colorManipulator.private_safeLighten, palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', colorMix(_colorManipulator.private_safeLighten, palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', colorMix(_colorManipulator.private_safeLighten, palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', colorMix(_colorManipulator.private_safeLighten, palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', colorMix(_colorManipulator.private_safeLighten, palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', colorSpace ? colorMix(_colorManipulator.private_safeAlpha, palette.text.primary, 0.11) : `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', colorMix(_colorManipulator.private_safeLighten, palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', colorMix(_colorManipulator.private_safeLighten, palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', colorMix(_colorManipulator.private_safeLighten, palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', colorMix(_colorManipulator.private_safeLighten, palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', colorMix(_colorManipulator.private_safeLighten, palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', colorMix(_colorManipulator.private_safeLighten, palette.warning.main, 0.62));\n      const snackbarContentBackground = colorSpace ? colorMix(_colorManipulator.private_safeDarken, palette.background.default, 0.6825) // use `0.6825` instead of `0.8` to match the contrast ratio of JS implementation\n      : (0, _colorManipulator.private_safeEmphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => colorSpace ? _createPalette.dark.text.primary : palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _colorManipulator.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', colorMix(_colorManipulator.private_safeLighten, colorMix(_colorManipulator.private_safeAlpha, palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', colorMix(_colorManipulator.private_safeAlpha, palette.grey[700], 0.92));\n    }\n    if (palette.mode === 'dark') {\n      setColor(palette.Alert, 'errorColor', colorMix(_colorManipulator.private_safeLighten, palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', colorMix(_colorManipulator.private_safeLighten, palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', colorMix(_colorManipulator.private_safeLighten, palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', colorMix(_colorManipulator.private_safeLighten, palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', colorMix(_colorManipulator.private_safeDarken, palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', colorMix(_colorManipulator.private_safeDarken, palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', colorMix(_colorManipulator.private_safeDarken, palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', colorMix(_colorManipulator.private_safeDarken, palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', colorMix(_colorManipulator.private_safeDarken, palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', colorMix(_colorManipulator.private_safeDarken, palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', colorSpace ? colorMix(_colorManipulator.private_safeAlpha, palette.text.primary, 0.13) : `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', colorMix(_colorManipulator.private_safeDarken, palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', colorMix(_colorManipulator.private_safeDarken, palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', colorMix(_colorManipulator.private_safeDarken, palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', colorMix(_colorManipulator.private_safeDarken, palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', colorMix(_colorManipulator.private_safeDarken, palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', colorMix(_colorManipulator.private_safeDarken, palette.warning.main, 0.5));\n      const snackbarContentBackground = colorSpace ? colorMix(_colorManipulator.private_safeLighten, palette.background.default, 0.985) // use `0.985` instead of `0.98` to match the contrast ratio of JS implementation\n      : (0, _colorManipulator.private_safeEmphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => colorSpace ? _createPalette.light.text.primary : palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _colorManipulator.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', colorMix(_colorManipulator.private_safeDarken, colorMix(_colorManipulator.private_safeAlpha, palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', colorMix(_colorManipulator.private_safeAlpha, palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n\n    // added for consistency with the `background.default` token\n    setColorChannel(palette.background, 'paper');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (color !== 'tonalOffset' && colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.main)));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.light)));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.dark)));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.contrastText)));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => (0, _deepmerge.default)(acc, argument), theme);\n  const parserConfig = {\n    prefix: cssVarPrefix,\n    disableCssColorScheme,\n    shouldSkipGeneratingVar,\n    getSelector: (0, _createGetSelector.default)(theme),\n    enableContrastVars: nativeColor\n  };\n  const {\n    vars,\n    generateThemeVars,\n    generateStyleSheets\n  } = (0, _cssVars.prepareCssVars)(theme, parserConfig);\n  theme.vars = vars;\n  Object.entries(theme.colorSchemes[theme.defaultColorScheme]).forEach(([key, value]) => {\n    theme[key] = value;\n  });\n  theme.generateThemeVars = generateThemeVars;\n  theme.generateStyleSheets = generateStyleSheets;\n  theme.generateSpacing = function generateSpacing() {\n    return (0, _system.createSpacing)(input.spacing, (0, _spacing.createUnarySpacing)(this));\n  };\n  theme.getColorSchemeSelector = (0, _cssVars.createGetColorSchemeSelector)(selector);\n  theme.spacing = theme.generateSpacing();\n  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\n  theme.unstable_sxConfig = {\n    ..._styleFunctionSx.unstable_defaultSxConfig,\n    ...input?.unstable_sxConfig\n  };\n  theme.unstable_sx = function sx(props) {\n    return (0, _styleFunctionSx.default)({\n      sx: props,\n      theme: this\n    });\n  };\n  theme.toRuntimeSource = _stringifyTheme.stringifyTheme; // for Pigment CSS integration\n\n  return theme;\n}","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","createGetCssVar","createThemeWithVars","_formatMuiErrorMessage","_deepmerge","_system","_spacing","_cssVars","_styleFunctionSx","_colorManipulator","_createThemeNoVars","_createColorScheme","_shouldSkipGeneratingVar","_createGetSelector","_stringifyTheme","_createPalette","assignNode","obj","keys","forEach","k","setColor","key","defaultValue","toRgb","color","startsWith","hslToRgb","setColorChannel","private_safeColorChannel","getSpacingVal","spacingInput","Array","isArray","silent","fn","error","undefined","cssVarPrefix","unstable_createGetCssVar","attachColorScheme","colorSpace","colorSchemes","scheme","restTheme","colorScheme","mode","palette","muiTheme","opacity","getOpacity","overlays","getOverlays","options","args","colorSchemesInput","light","defaultColorScheme","defaultColorSchemeInput","disableCssColorScheme","nativeColor","shouldSkipGeneratingVar","colorSchemeSelector","selector","dark","rootSelector","input","firstColorScheme","getCssVar","defaultSchemeInput","builtInLight","builtInDark","customColorSchemes","defaultScheme","Error","process","env","NODE_ENV","theme","font","prepareTypographyVars","typography","spacing","setCssVarColor","cssVar","tokens","split","colorToken","common","colorMix","method","coefficient","mixer","private_safeAlpha","toFixed","private_safeDarken","private_safeLighten","Alert","info","success","warning","getContrastText","main","AppBar","Avatar","Button","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","text","Slider","snackbarContentBackground","background","private_safeEmphasize","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","divider","Tooltip","grey","colors","contrastText","active","selected","reduce","acc","argument","parserConfig","prefix","getSelector","enableContrastVars","vars","generateThemeVars","generateStyleSheets","prepareCssVars","entries","generateSpacing","createSpacing","createUnarySpacing","getColorSchemeSelector","createGetColorSchemeSelector","unstable_sxConfig","unstable_defaultSxConfig","unstable_sx","sx","props","toRuntimeSource","stringifyTheme"],"sources":["/home/thegeekylad/Projects/Projects/split.me/node_modules/@mui/material/styles/createThemeWithVars.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = createThemeWithVars;\nvar _formatMuiErrorMessage = _interopRequireDefault(require(\"@mui/utils/formatMuiErrorMessage\"));\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _system = require(\"@mui/system\");\nvar _spacing = require(\"@mui/system/spacing\");\nvar _cssVars = require(\"@mui/system/cssVars\");\nvar _styleFunctionSx = _interopRequireWildcard(require(\"@mui/system/styleFunctionSx\"));\nvar _colorManipulator = require(\"@mui/system/colorManipulator\");\nvar _createThemeNoVars = _interopRequireDefault(require(\"./createThemeNoVars\"));\nvar _createColorScheme = _interopRequireWildcard(require(\"./createColorScheme\"));\nvar _shouldSkipGeneratingVar = _interopRequireDefault(require(\"./shouldSkipGeneratingVar\"));\nvar _createGetSelector = _interopRequireDefault(require(\"./createGetSelector\"));\nvar _stringifyTheme = require(\"./stringifyTheme\");\nvar _createPalette = require(\"./createPalette\");\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction toRgb(color) {\n  if (typeof color !== 'string' || !color.startsWith('hsl')) {\n    return color;\n  }\n  return (0, _colorManipulator.hslToRgb)(color);\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = (0, _colorManipulator.private_safeColorChannel)(toRgb(obj[key]), `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, for example \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nfunction getSpacingVal(spacingInput) {\n  if (typeof spacingInput === 'number') {\n    return `${spacingInput}px`;\n  }\n  if (typeof spacingInput === 'string' || typeof spacingInput === 'function' || Array.isArray(spacingInput)) {\n    return spacingInput;\n  }\n  return '8px';\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nconst createGetCssVar = (cssVarPrefix = 'mui') => (0, _system.unstable_createGetCssVar)(cssVarPrefix);\nexports.createGetCssVar = createGetCssVar;\nfunction attachColorScheme(colorSpace, colorSchemes, scheme, restTheme, colorScheme) {\n  if (!scheme) {\n    return undefined;\n  }\n  scheme = scheme === true ? {} : scheme;\n  const mode = colorScheme === 'dark' ? 'dark' : 'light';\n  if (!restTheme) {\n    colorSchemes[colorScheme] = (0, _createColorScheme.default)({\n      ...scheme,\n      palette: {\n        mode,\n        ...scheme?.palette\n      },\n      colorSpace\n    });\n    return undefined;\n  }\n  const {\n    palette,\n    ...muiTheme\n  } = (0, _createThemeNoVars.default)({\n    ...restTheme,\n    palette: {\n      mode,\n      ...scheme?.palette\n    },\n    colorSpace\n  });\n  colorSchemes[colorScheme] = {\n    ...scheme,\n    palette,\n    opacity: {\n      ...(0, _createColorScheme.getOpacity)(mode),\n      ...scheme?.opacity\n    },\n    overlays: scheme?.overlays || (0, _createColorScheme.getOverlays)(mode)\n  };\n  return muiTheme;\n}\n\n/**\n * A default `createThemeWithVars` comes with a single color scheme, either `light` or `dark` based on the `defaultColorScheme`.\n * This is better suited for apps that only need a single color scheme.\n *\n * To enable built-in `light` and `dark` color schemes, either:\n * 1. provide a `colorSchemeSelector` to define how the color schemes will change.\n * 2. provide `colorSchemes.dark` will set `colorSchemeSelector: 'media'` by default.\n */\nfunction createThemeWithVars(options = {}, ...args) {\n  const {\n    colorSchemes: colorSchemesInput = {\n      light: true\n    },\n    defaultColorScheme: defaultColorSchemeInput,\n    disableCssColorScheme = false,\n    cssVarPrefix = 'mui',\n    nativeColor = false,\n    shouldSkipGeneratingVar = _shouldSkipGeneratingVar.default,\n    colorSchemeSelector: selector = colorSchemesInput.light && colorSchemesInput.dark ? 'media' : undefined,\n    rootSelector = ':root',\n    ...input\n  } = options;\n  const firstColorScheme = Object.keys(colorSchemesInput)[0];\n  const defaultColorScheme = defaultColorSchemeInput || (colorSchemesInput.light && firstColorScheme !== 'light' ? 'light' : firstColorScheme);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const {\n    [defaultColorScheme]: defaultSchemeInput,\n    light: builtInLight,\n    dark: builtInDark,\n    ...customColorSchemes\n  } = colorSchemesInput;\n  const colorSchemes = {\n    ...customColorSchemes\n  };\n  let defaultScheme = defaultSchemeInput;\n\n  // For built-in light and dark color schemes, ensure that the value is valid if they are the default color scheme.\n  if (defaultColorScheme === 'dark' && !('dark' in colorSchemesInput) || defaultColorScheme === 'light' && !('light' in colorSchemesInput)) {\n    defaultScheme = true;\n  }\n  if (!defaultScheme) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`colorSchemes.${defaultColorScheme}\\` option is either missing or invalid.` : (0, _formatMuiErrorMessage.default)(21, defaultColorScheme));\n  }\n\n  // The reason to use `oklch` is that it is the most perceptually uniform color space and widely supported.\n  let colorSpace;\n  if (nativeColor) {\n    colorSpace = 'oklch';\n  }\n\n  // Create the palette for the default color scheme, either `light`, `dark`, or custom color scheme.\n  const muiTheme = attachColorScheme(colorSpace, colorSchemes, defaultScheme, input, defaultColorScheme);\n  if (builtInLight && !colorSchemes.light) {\n    attachColorScheme(colorSpace, colorSchemes, builtInLight, undefined, 'light');\n  }\n  if (builtInDark && !colorSchemes.dark) {\n    attachColorScheme(colorSpace, colorSchemes, builtInDark, undefined, 'dark');\n  }\n  let theme = {\n    defaultColorScheme,\n    ...muiTheme,\n    cssVarPrefix,\n    colorSchemeSelector: selector,\n    rootSelector,\n    getCssVar,\n    colorSchemes,\n    font: {\n      ...(0, _cssVars.prepareTypographyVars)(muiTheme.typography),\n      ...muiTheme.font\n    },\n    spacing: getSpacingVal(input.spacing)\n  };\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n    const setCssVarColor = cssVar => {\n      const tokens = cssVar.split('-');\n      const color = tokens[1];\n      const colorToken = tokens[2];\n      return getCssVar(cssVar, palette[color][colorToken]);\n    };\n\n    // attach black & white channels to common node\n    if (palette.mode === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    }\n    if (palette.mode === 'dark') {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n    function colorMix(method, color, coefficient) {\n      if (colorSpace) {\n        let mixer;\n        if (method === _colorManipulator.private_safeAlpha) {\n          mixer = `transparent ${((1 - coefficient) * 100).toFixed(0)}%`;\n        }\n        if (method === _colorManipulator.private_safeDarken) {\n          mixer = `#000 ${(coefficient * 100).toFixed(0)}%`;\n        }\n        if (method === _colorManipulator.private_safeLighten) {\n          mixer = `#fff ${(coefficient * 100).toFixed(0)}%`;\n        }\n        return `color-mix(in ${colorSpace}, ${color}, ${mixer})`;\n      }\n      return method(color, coefficient);\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Button', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (palette.mode === 'light') {\n      setColor(palette.Alert, 'errorColor', colorMix(_colorManipulator.private_safeDarken, palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', colorMix(_colorManipulator.private_safeDarken, palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', colorMix(_colorManipulator.private_safeDarken, palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', colorMix(_colorManipulator.private_safeDarken, palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', colorMix(_colorManipulator.private_safeLighten, palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', colorMix(_colorManipulator.private_safeLighten, palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', colorMix(_colorManipulator.private_safeLighten, palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', colorMix(_colorManipulator.private_safeLighten, palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', colorMix(_colorManipulator.private_safeLighten, palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', colorMix(_colorManipulator.private_safeLighten, palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', colorMix(_colorManipulator.private_safeLighten, palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', colorSpace ? colorMix(_colorManipulator.private_safeAlpha, palette.text.primary, 0.11) : `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', colorMix(_colorManipulator.private_safeLighten, palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', colorMix(_colorManipulator.private_safeLighten, palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', colorMix(_colorManipulator.private_safeLighten, palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', colorMix(_colorManipulator.private_safeLighten, palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', colorMix(_colorManipulator.private_safeLighten, palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', colorMix(_colorManipulator.private_safeLighten, palette.warning.main, 0.62));\n      const snackbarContentBackground = colorSpace ? colorMix(_colorManipulator.private_safeDarken, palette.background.default, 0.6825) // use `0.6825` instead of `0.8` to match the contrast ratio of JS implementation\n      : (0, _colorManipulator.private_safeEmphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => colorSpace ? _createPalette.dark.text.primary : palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _colorManipulator.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', colorMix(_colorManipulator.private_safeLighten, palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', colorMix(_colorManipulator.private_safeLighten, colorMix(_colorManipulator.private_safeAlpha, palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', colorMix(_colorManipulator.private_safeAlpha, palette.grey[700], 0.92));\n    }\n    if (palette.mode === 'dark') {\n      setColor(palette.Alert, 'errorColor', colorMix(_colorManipulator.private_safeLighten, palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', colorMix(_colorManipulator.private_safeLighten, palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', colorMix(_colorManipulator.private_safeLighten, palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', colorMix(_colorManipulator.private_safeLighten, palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', colorMix(_colorManipulator.private_safeDarken, palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', colorMix(_colorManipulator.private_safeDarken, palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', colorMix(_colorManipulator.private_safeDarken, palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', colorMix(_colorManipulator.private_safeDarken, palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', colorMix(_colorManipulator.private_safeDarken, palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', colorMix(_colorManipulator.private_safeDarken, palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', colorMix(_colorManipulator.private_safeDarken, palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', colorSpace ? colorMix(_colorManipulator.private_safeAlpha, palette.text.primary, 0.13) : `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', colorMix(_colorManipulator.private_safeDarken, palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', colorMix(_colorManipulator.private_safeDarken, palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', colorMix(_colorManipulator.private_safeDarken, palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', colorMix(_colorManipulator.private_safeDarken, palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', colorMix(_colorManipulator.private_safeDarken, palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', colorMix(_colorManipulator.private_safeDarken, palette.warning.main, 0.5));\n      const snackbarContentBackground = colorSpace ? colorMix(_colorManipulator.private_safeLighten, palette.background.default, 0.985) // use `0.985` instead of `0.98` to match the contrast ratio of JS implementation\n      : (0, _colorManipulator.private_safeEmphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => colorSpace ? _createPalette.light.text.primary : palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _colorManipulator.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', colorMix(_colorManipulator.private_safeDarken, palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', colorMix(_colorManipulator.private_safeDarken, colorMix(_colorManipulator.private_safeAlpha, palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', colorMix(_colorManipulator.private_safeAlpha, palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n\n    // added for consistency with the `background.default` token\n    setColorChannel(palette.background, 'paper');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (color !== 'tonalOffset' && colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.main)));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.light)));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.dark)));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', (0, _colorManipulator.private_safeColorChannel)(toRgb(colors.contrastText)));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => (0, _deepmerge.default)(acc, argument), theme);\n  const parserConfig = {\n    prefix: cssVarPrefix,\n    disableCssColorScheme,\n    shouldSkipGeneratingVar,\n    getSelector: (0, _createGetSelector.default)(theme),\n    enableContrastVars: nativeColor\n  };\n  const {\n    vars,\n    generateThemeVars,\n    generateStyleSheets\n  } = (0, _cssVars.prepareCssVars)(theme, parserConfig);\n  theme.vars = vars;\n  Object.entries(theme.colorSchemes[theme.defaultColorScheme]).forEach(([key, value]) => {\n    theme[key] = value;\n  });\n  theme.generateThemeVars = generateThemeVars;\n  theme.generateStyleSheets = generateStyleSheets;\n  theme.generateSpacing = function generateSpacing() {\n    return (0, _system.createSpacing)(input.spacing, (0, _spacing.createUnarySpacing)(this));\n  };\n  theme.getColorSchemeSelector = (0, _cssVars.createGetColorSchemeSelector)(selector);\n  theme.spacing = theme.generateSpacing();\n  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\n  theme.unstable_sxConfig = {\n    ..._styleFunctionSx.unstable_defaultSxConfig,\n    ...input?.unstable_sxConfig\n  };\n  theme.unstable_sx = function sx(props) {\n    return (0, _styleFunctionSx.default)({\n      sx: props,\n      theme: this\n    });\n  };\n  theme.toRuntimeSource = _stringifyTheme.stringifyTheme; // for Pigment CSS integration\n\n  return theme;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}