{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSplitFieldProps = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _extractValidationProps = require(\"../validation/extractValidationProps\");\nconst SHARED_FIELD_INTERNAL_PROP_NAMES = ['value', 'defaultValue', 'referenceDate', 'format', 'formatDensity', 'onChange', 'timezone', 'onError', 'shouldRespectLeadingZeros', 'selectedSections', 'onSelectedSectionsChange', 'unstableFieldRef', 'unstableStartFieldRef', 'unstableEndFieldRef', 'enableAccessibleFieldDOMStructure', 'disabled', 'readOnly', 'dateSeparator', 'autoFocus', 'focused'];\n/**\n * Split the props received by the field component into:\n * - `internalProps` which are used by the various hooks called by the field component.\n * - `forwardedProps` which are passed to the underlying component.\n * Note that some forwarded props might be used by the hooks as well.\n * For instance, hooks like `useDateField` need props like `onKeyDown` to merge the default event handler and the one provided by the application.\n * @template TProps, TValueType\n * @param {TProps} props The props received by the field component.\n * @param {TValueType} valueType The type of the field value ('date', 'time', or 'date-time').\n */\nconst useSplitFieldProps = (props, valueType) => {\n  return React.useMemo(() => {\n    const forwardedProps = (0, _extends2.default)({}, props);\n    const internalProps = {};\n    const extractProp = propName => {\n      if (forwardedProps.hasOwnProperty(propName)) {\n        // @ts-ignore\n        internalProps[propName] = forwardedProps[propName];\n        delete forwardedProps[propName];\n      }\n    };\n    SHARED_FIELD_INTERNAL_PROP_NAMES.forEach(extractProp);\n    if (valueType === 'date') {\n      _extractValidationProps.DATE_VALIDATION_PROP_NAMES.forEach(extractProp);\n    } else if (valueType === 'time') {\n      _extractValidationProps.TIME_VALIDATION_PROP_NAMES.forEach(extractProp);\n    } else if (valueType === 'date-time') {\n      _extractValidationProps.DATE_VALIDATION_PROP_NAMES.forEach(extractProp);\n      _extractValidationProps.TIME_VALIDATION_PROP_NAMES.forEach(extractProp);\n      _extractValidationProps.DATE_TIME_VALIDATION_PROP_NAMES.forEach(extractProp);\n    }\n    return {\n      forwardedProps,\n      internalProps\n    };\n  }, [props, valueType]);\n};\n\n/**\n * Extract the internal props from the props received by the field component.\n * This makes sure that the internal props not defined in the props are not present in the result.\n */\nexports.useSplitFieldProps = useSplitFieldProps;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useSplitFieldProps","_extends2","React","_extractValidationProps","SHARED_FIELD_INTERNAL_PROP_NAMES","props","valueType","useMemo","forwardedProps","internalProps","extractProp","propName","hasOwnProperty","forEach","DATE_VALIDATION_PROP_NAMES","TIME_VALIDATION_PROP_NAMES","DATE_TIME_VALIDATION_PROP_NAMES"],"sources":["/home/thegeekylad/Projects/Projects/split.me/node_modules/@mui/x-date-pickers/hooks/useSplitFieldProps.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSplitFieldProps = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _extractValidationProps = require(\"../validation/extractValidationProps\");\nconst SHARED_FIELD_INTERNAL_PROP_NAMES = ['value', 'defaultValue', 'referenceDate', 'format', 'formatDensity', 'onChange', 'timezone', 'onError', 'shouldRespectLeadingZeros', 'selectedSections', 'onSelectedSectionsChange', 'unstableFieldRef', 'unstableStartFieldRef', 'unstableEndFieldRef', 'enableAccessibleFieldDOMStructure', 'disabled', 'readOnly', 'dateSeparator', 'autoFocus', 'focused'];\n/**\n * Split the props received by the field component into:\n * - `internalProps` which are used by the various hooks called by the field component.\n * - `forwardedProps` which are passed to the underlying component.\n * Note that some forwarded props might be used by the hooks as well.\n * For instance, hooks like `useDateField` need props like `onKeyDown` to merge the default event handler and the one provided by the application.\n * @template TProps, TValueType\n * @param {TProps} props The props received by the field component.\n * @param {TValueType} valueType The type of the field value ('date', 'time', or 'date-time').\n */\nconst useSplitFieldProps = (props, valueType) => {\n  return React.useMemo(() => {\n    const forwardedProps = (0, _extends2.default)({}, props);\n    const internalProps = {};\n    const extractProp = propName => {\n      if (forwardedProps.hasOwnProperty(propName)) {\n        // @ts-ignore\n        internalProps[propName] = forwardedProps[propName];\n        delete forwardedProps[propName];\n      }\n    };\n    SHARED_FIELD_INTERNAL_PROP_NAMES.forEach(extractProp);\n    if (valueType === 'date') {\n      _extractValidationProps.DATE_VALIDATION_PROP_NAMES.forEach(extractProp);\n    } else if (valueType === 'time') {\n      _extractValidationProps.TIME_VALIDATION_PROP_NAMES.forEach(extractProp);\n    } else if (valueType === 'date-time') {\n      _extractValidationProps.DATE_VALIDATION_PROP_NAMES.forEach(extractProp);\n      _extractValidationProps.TIME_VALIDATION_PROP_NAMES.forEach(extractProp);\n      _extractValidationProps.DATE_TIME_VALIDATION_PROP_NAMES.forEach(extractProp);\n    }\n    return {\n      forwardedProps,\n      internalProps\n    };\n  }, [props, valueType]);\n};\n\n/**\n * Extract the internal props from the props received by the field component.\n * This makes sure that the internal props not defined in the props are not present in the result.\n */\nexports.useSplitFieldProps = useSplitFieldProps;"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9F,IAAIC,sBAAsB,GAAGF,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5FE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,IAAIC,SAAS,GAAGN,sBAAsB,CAACF,OAAO,CAAC,gCAAgC,CAAC,CAAC;AACjF,IAAIS,KAAK,GAAGV,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD,IAAIU,uBAAuB,GAAGV,OAAO,CAAC,sCAAsC,CAAC;AAC7E,MAAMW,gCAAgC,GAAG,CAAC,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,2BAA2B,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,kBAAkB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,mCAAmC,EAAE,UAAU,EAAE,UAAU,EAAE,eAAe,EAAE,WAAW,EAAE,SAAS,CAAC;AACxY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMJ,kBAAkB,GAAGA,CAACK,KAAK,EAAEC,SAAS,KAAK;EAC/C,OAAOJ,KAAK,CAACK,OAAO,CAAC,MAAM;IACzB,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAEP,SAAS,CAACP,OAAO,EAAE,CAAC,CAAC,EAAEW,KAAK,CAAC;IACxD,MAAMI,aAAa,GAAG,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAGC,QAAQ,IAAI;MAC9B,IAAIH,cAAc,CAACI,cAAc,CAACD,QAAQ,CAAC,EAAE;QAC3C;QACAF,aAAa,CAACE,QAAQ,CAAC,GAAGH,cAAc,CAACG,QAAQ,CAAC;QAClD,OAAOH,cAAc,CAACG,QAAQ,CAAC;MACjC;IACF,CAAC;IACDP,gCAAgC,CAACS,OAAO,CAACH,WAAW,CAAC;IACrD,IAAIJ,SAAS,KAAK,MAAM,EAAE;MACxBH,uBAAuB,CAACW,0BAA0B,CAACD,OAAO,CAACH,WAAW,CAAC;IACzE,CAAC,MAAM,IAAIJ,SAAS,KAAK,MAAM,EAAE;MAC/BH,uBAAuB,CAACY,0BAA0B,CAACF,OAAO,CAACH,WAAW,CAAC;IACzE,CAAC,MAAM,IAAIJ,SAAS,KAAK,WAAW,EAAE;MACpCH,uBAAuB,CAACW,0BAA0B,CAACD,OAAO,CAACH,WAAW,CAAC;MACvEP,uBAAuB,CAACY,0BAA0B,CAACF,OAAO,CAACH,WAAW,CAAC;MACvEP,uBAAuB,CAACa,+BAA+B,CAACH,OAAO,CAACH,WAAW,CAAC;IAC9E;IACA,OAAO;MACLF,cAAc;MACdC;IACF,CAAC;EACH,CAAC,EAAE,CAACJ,KAAK,EAAEC,SAAS,CAAC,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACAR,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}